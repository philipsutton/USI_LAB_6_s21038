name: Java CI with Maven

on: [push]

jobs:
  calculate-version:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version-output-step.outputs.version-output }}
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
      - name: Calculate version
        shell: bash
        run: |
          # Skrypt do obliczania nowej wersji
      - id: version-output-step
        run: echo "::set-output name=version-output::$(cat version.txt)"

  build:
    runs-on: ubuntu-latest
    needs: calculate-version
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
      - name: Set up JDK 16
        uses: actions/setup-java@v2
        with:
          java-version: '16'
          distribution: 'temurin'
          cache: maven
      - name: Building version
        run: echo ${{ needs.calculate-version.outputs.version }}
      - run: sed -i -e "s/<version>local<\/version>/<version>${{ needs.calculate-version.outputs.version }}<\/version>/" pom.xml
      - name: Build with Maven
        run: mvn verify
      - name: Upload JAR file
        uses: actions/upload-artifact@v2
        with:
          name: app
          path: target/*.jar
          retention-days: 10
      - name: Generate SBOM for JAR
        uses: anchore/sbom-action@v0
        with:
          artifact_path: target/*.jar
          format: spdx-json
          output_file: sbom-jdk16.json

  generate-sbom:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
      - name: Generate attestation to SBOM
        run: |
      - name: Generate SBOM with attestation
        uses: anchore/sbom-action@v0
        with:
          artifact_path: sbom-jdk16.json
          format: spdx-json
          output_file: sbom-with-attestation.json

  docker:
    runs-on: ubuntu-latest
    needs: [calculate-version, build, generate-sbom]
    if: ${{ github.ref_type == 'branch' && github.ref_name == 'main' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        with:
          driver-opts: network=host
      - name: Download JAR file
        uses: actions/download-artifact@v2
        with:
          name: app
          path: target/
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
      - name: Build and push to local registry
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: pbakpjatk/test-app:${{ needs.calculate-version.outputs.version }}
